import * as type from '../type';

import { countMinutes } from '@/utils/DateFormatUtils'
export const FlightInfo = {
  state: {
    // flightDetail: null,
    flightsData: {},
    sortType: 0, // bestPirce  shortest departue，
    // isInternational: false, // 国际航班
    showWhichFlights: 0, // 显示去程， 1 回程；
    filterOptions: {
      airlines: [],
      stops: [],
      departTime: [0, 23 * 60 + 59], // 00:00 - 23:59 单位分
      prices: [],
    }
  },
  actions: {
    //
  },
  getters: {
    flightsDataList: (state, getters, rootState) => {
      if (getters.isInternational) {
        if (rootState.SearchForm.tripType === 0) {
          return state.flightsData.IntlFlightArray.map(v => v.departFlight);
        } else {
          return state.flightsData.IntlFlightArray;
        }
      } else {
        if (state.showWhichFlights === 0) {
          return state.flightsData.departFlightArray;
        } else {
          return state.flightsData.returnFlightArray
        }
      }
    },
    isInternational: (state) => state.flightsData.isIntl,
    // 筛选，排序
    suitableFlightsList: (state, getters, rootState) => {
      if (getters.flightsDataList instanceof Array) {
        const suitableFlightsList = getters.flightsDataList.filter(val => {
          const { prices, departTime, stops, airlines } = state.filterOptions;

          if (prices.length !== 0) {
            if (val.opr !== Math.max(prices[0], Math.min(prices[1], val.opr))) {
              return false;
            }
          }
          if (departTime.length !== 0) {
            const minutes = countMinutes(new Date(val.dt));
            if (minutes !== Math.max(departTime[0], Math.min(departTime[1], minutes))) {
              return false;
            }
          }
          if (stops.length !== 0) {
            const stop = val.sb > 3 ? 3 : val.sb;
            if (!stops.includes(stop)) {
              return false;
            }
          }
          if (airlines.length !== 0) {
            if (!airlines.includes(val.al)) {
              return false;
            }
          }
          return true;
        })

        return suitableFlightsList;
      }
    },
    sortFlightsList: (state, getters, rootState) => {
      if (!getters.suitableFlightsList || getters.suitableFlightsList.length === 0) return [];
      switch (state.sortType) {
        case 0:
          return getters.suitableFlightsList.sort((a, b) => a.opr - b.opr);
        case 1:
          return getters.suitableFlightsList.sort((a, b) => (a.adts - a.ddts) - (b.adts - b.ddts));
        case 2:
          return getters.suitableFlightsList.sort((a, b) => a.ddts - b.ddts);
        default:
          return getters.suitableFlightsList;
      }
    }
  },
  mutations: {
    [type.SAVE_FLIGHTINFO] (state, data) {
      state.flightsData = data;
    },
    [type.CHANGE_FLIGHT_SORT] (state, sortString) {
      state.sortType = sortString
    },
    // [type.CHANGE_INTERNATIONAL] (state, flag) {
    //   state.isInternational = flag;
    // },
    [type.CHANGE_WHICH_FLIGHTS] (state, number) {
      state.showWitchFlights = number;
    },
    [type.CHANGE_FILTER_OPTIONS] (state, obj) {
      state.filterOptions = { ...state.filterOptions, ...obj };
    }

  }
};
