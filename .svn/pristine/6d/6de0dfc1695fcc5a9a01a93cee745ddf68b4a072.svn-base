<template>
  <div>
    <div class="summary-info">
      <p class="summary-info-title">Secure Your Trip</p>
      <div class="summary-info-price">
        <p class="summary-info-item">
          <span class="summary-info-item-type">Adult, {{cabinClass}} x {{adult}}</span>
          <span class="summary-info-item-price">&#8377; {{(d_oprs + r_oprs)|addCommas}}</span>
        </p>
        <p class="summary-info-item">
          <span class="summary-info-item-type">Secure Trip x{{pConut}}</span>
          <span class="summary-info-item-price">&#8377; {{securePri|addCommas}}</span>
        </p>
        <p class="summary-info-item">
          <span class="summary-info-item-type">Coupon</span>
          <span class="summary-info-item-price green">- &#8377; {{coupon}}</span>
        </p>
      </div>
      <p class="summary-info-totalPrice">
        <span>Grand Total</span>
        <span class="summary-info-totalPrice-text">&#8377; {{totalPri|addCommas}}</span>
      </p>
      <div class="summary-info-checkOut">
        <button @click="toCheckOut" class="btn summary-info-checkOut-btn">Proceed to Checkout</button>
      </div>
      <div class="summary-info-tc">
        <input type="checkbox" class="hide" v-model="isChecked" id="TC-checkbox">
        <label for="TC-checkbox"><i class="s-icon summary-info-gst-check" :class="isChecked ? 's-icon-select' : 's-icon-unselect'"></i> &nbsp; I agree to the </label><span @click="showTC" class="a_link">terms &amp; conditions</span>
      </div>
    </div>
    <transition name="model-slide">
      <model v-if="isShowModel" :errorMsg = "errorMsg" :modelType = "modelType"></model>
    </transition>
  </div>
</template>

<script>
import EventHub from '@/utils/EventHub';
import model from './model'
export default {
  props: ['flightInfo'],
  data () {
    return {
      isChecked: true,
      adult: 0,
      cabinClass: '',
      d_oprs: 0,
      r_oprs: 0,
      securePri: 0,
      coupon: 0,
      pConut: 0,
      days: 0,
      couponInfo: {},
      operateOrderTimer: undefined,
      flightDates: [],
      birthDefStatus: false,
      isShowModel: false,
      errorMsg: '',
      modelType: null
    }
  },
  created () {
    EventHub.$on('isCheckInsure', (res) => {
      this.securePri = res.insurePri * this.pConut;
      this.days = res.days;
    })
    EventHub.$on('sendCouponInfo', (res) => {
      this.couponInfo = res;
      this.coupon = res.tradeAmount || 0;
    })
  },
  methods: {
    toCheckOut () {
      clearInterval(this.operateOrderTimer);
      EventHub.$emit('sendTraveInfo', true);
      EventHub.$emit('sendContactInfo', true);
      const _that = this;
      if (this.$store.state.viaCheck) {
        this.operateOrder();
      } else {
        this.operateOrderTimer = setInterval(function () {
          if (_that.$store.state.viaCheck) {
            _that.operateOrder();
            clearInterval(_that.operateOrderTimer);
          }
        }, 1000);
      }

      // location.href = '/payment/23165121512151215/45%20151215125'
    },
    operateOrder () {
      const _that = this;
      setTimeout(() => {
        _that.birthDef(_that.$store.state.traverInfo);
        if (!_that.$store.state.traverStatus || !_that.$store.state.contactStatus || !this.birthDefStatus) return false;

        var orderInfo = {
          departFlight: _that.flightInfo.departFlight,
          flightOrder: {
            days: _that.days,
            insurance: !!_that.securePri,
            serviceCount: 0,
            supplieId: 0,
          },
          ordersGSTInfo: null,
          requestFromClient: _that.flightInfo.requestFromClient,
          returnCash: _that.flightInfo.returnCash,
          rtd: null,
          taskToken: _that.flightInfo.taskToken,
          token: _that.flightInfo.token
        }
        const flightPsrList = _that.$store.state.traverInfo.map(ele => {
          const bir = ele.birthDate.split('-');
          const birthDate = bir.length === 1 ? '' : bir[2] + '-' + bir[1] + '-' + bir[0]
          const card = ele.cardValid.split('-');
          const cardValid = card.length === 1 ? '' : card[2] + '-' + card[1] + '-' + card[0];
          return { ...ele, ...{ birthDate, cardValid } }
        });
        orderInfo.flightOrder.flightPsrList = flightPsrList;

        orderInfo.flightOrder.payTransactionMap = _that.couponInfo.totalPrice === undefined ? {} : { 1: _that.couponInfo };
        Object.assign(orderInfo.flightOrder, _that.$store.state.contactInfo);
        _that.saveOrder(orderInfo);
      }, 100);
    },
    birthDef (traverInfo) {
      const sendData = {
        flightPsrs: {},
        flightDates: this.flightDates
      }
      traverInfo.forEach(function (val, index) {
        const Obj = {
          birthDate: val.birthDate,
          passengerType: val.passengerType
        };
        sendData.flightPsrs[index] = Obj;
      });
      this.$http.post('/heg_api/order/checkPassenger.do', sendData).then((res) => {
        this.birthDefStatus = res.success;
        if (!res.success) {
          var errorInfo = {
            1: 'Adult\'s age shall not be less than 12 on the date of travel.',
            2: 'Child\'s age must be between 2 and 11 on the date of travel.',
            3: 'Infant\'s age must be less than 2 and more than 14 days on the date of travel.',
          };
          this.isShowModel = true;
          this.modelType = 2;
          for (let i in res.flightPsrs) {
            this.errorMsg = errorInfo[res.flightPsrs[i].passengerType];
            break;
          }
        }
      })
    },
    saveOrder (sendData) {
      this.$http.post('/heg_api/order/saveOrder.do', sendData).then((res) => {
        if (!res.success) {

        }
      })
    },
    showTC () {
      EventHub.$emit('isShowTC', true);
    },
  },
  watch: {
    flightInfo (val) {
      const _this = this;
      this.adult = val.requestFromClient.adults;
      this.cabinClass = val.requestFromClient.cabinClass;
      this.d_oprs = Number(val.departFlight.opr);
      this.r_oprs = val.returnFlight !== undefined ? Number(val.returnFlight.opr) : 0;
      this.pConut = val.requestFromClient.adults + val.requestFromClient.baby + val.requestFromClient.childs;
      function getflightDates (data) {
        data.forEach(function (value) {
          value.dd = value.dt.replace(/\s.*/, '');
          _this.flightDates.push(value.dd.replace(/\//g, '-'));
        })
      }
      getflightDates(val.departFlight.stopByFlightArray);
      if (val.returnFlight !== undefined) {
        getflightDates(val.returnFlight.stopByFlightArray);
      }
    }
  },
  computed: {
    totalPri () {
      return this.d_oprs + this.r_oprs + this.securePri - this.coupon
    }
  },
  components: {
    model
  }
}
</script>
<style lang="scss" scoped>
  .summary-info{
    padding: 0 0.3rem;
  }
  .summary-info-title{
    font-size: 14px;
    line-height: 30px;
    color: $lightBlack;
    font-weight: 700;
    margin-bottom: 0.1rem;
  }
  .summary-info-price{
    padding-bottom: 0.3rem;
    border-bottom:0.01rem solid rgba(220,220,220,1);
  }
  .summary-info-item{
    line-height: 0.45rem;
    margin-bottom: 0.2rem;
  }
  .summary-info-item-type{
    display: inline-block;
    width: 60%;
    font-size: 0.24rem;
    color:rgba(102,102,102,1);
    line-height:0.3rem;
  }
  .summary-info-item-price{
    display: inline-block;
    width: 40%;
    font-size: 0.32rem;
    color:rgba(102,102,102,1);
    line-height:0.45rem;
    text-align: right;
    &.green{
      color: $green;
    }
  }
  .summary-info-totalPrice{
    font-size: 0.24rem;
    color:rgba(102,102,102,1);
    line-height:0.3rem;
    text-align: right;
    margin-top: 0.3rem;
  }
  .summary-info-totalPrice-text{
    font-size: 0.42rem;
    font-weight:700;
    color:rgba(0,0,0,1);
    line-height:0.52rem;
    margin-left: 0.15rem;
  }
  .summary-info-checkOut{
    text-align: center;
  }
  .summary-info-checkOut-btn{
    display: inline-block;
    width:6.2rem;
    height:0.84rem;
    background:rgba(227,164,40,1);
    border-radius:0.12rem;
    font-size: 0.36rem;
    font-weight:bold;
    color:rgba(255,255,255,1);
    line-height:0.84rem;
    color: white;
    margin: 0.4rem 0 0.32rem;
  }
  .summary-info-tc{
    text-align: center;
    margin-bottom: 0.6rem;
    font-size: 0.24rem;
  }
  .summary-info-gst-check{
    vertical-align: middle;
  }
  // 提示框
.model-slide-enter-active {
  animation: model-in .5s;
}
.model-slide-leave-active {
  animation: model-in .5s reverse;
}
@keyframes model-in {
  0% {
    transform: translateX(500px);
  }
  100% {
    transform: translateX(0px);
  }
}
</style>
