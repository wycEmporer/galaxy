import fetch from '@/utils/ApiUtils';
import { queryUserOrderNew, queryUserOrderDetail } from '@/constants/ApiConstants';
export const MyTripList = {
  state: {
    status: 1,
    totalPage: 1,
    isLoading: false,
    isMoreLoading: false,
    statusString: 'Upcoming',
    triplistArray: [],
    tripDetailInfo: {},
    tripDetailInfoChange: {},
    statusList: ['', 'Upcoming', 'To be paid', 'compeleted', 'Canceled']
  },
  actions: {
    selectDiffStatus ({ commit, state }, type) {
      state.triplistArray = [];
      state.status = type;
      state.statusString = state.statusList[type];
      commit('saveMyTripList', type);
    },
    firstInToInitData ({ state }, status) {
      state.status = status;
    }
  },
  mutations: {
    changeLoadMoreState (state, val) {
      state.isLoading = val;
      state.isMoreLoading = val;
    },
    saveMyTripList (state, status) {
      let data = {
        pageNum: 1,
        pageSize: 8,
        status: state.statusList[status]
      };
      fetch.post(queryUserOrderNew, data, { headers: {
        'content-type': 'application/json'
      } }).then(res => {
        if (res.code === 0) {
          let arr = res.data.list;
          state.totalPage = Math.ceil(res.data.totalSize / res.data.list.length);
          state.triplistArray.push(...arr);
          state.isLoading = false;
          state.isMoreLoading = false;
        }
      })
    },
    saveSearchDetailInfo (state, data) {
      let url = `${queryUserOrderDetail}?tripId=${data}`
      fetch(url).then(res => {
        if (res.code === 0) {
          state.tripDetailInfo = res.data;
          state.tripDetailInfoChange = res.data.triplist[0].travellerinfo[0];
        } else {
          console.log(`%c ${res.code} --> ${res.message}`, 'color:red;');
        }
      })
    }
  }
};
